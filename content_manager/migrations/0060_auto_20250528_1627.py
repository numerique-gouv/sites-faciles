# Generated by Django 5.2.1 on 2025-05-28 14:27

from django.db import migrations
from content_manager.models import ContentPage, CatalogIndexPage
from itertools import chain


def migrate_obsolete_fields(apps, schema_editor):
    ContentPage = apps.get_model("content_manager", "ContentPage")
    CatalogIndexPage = apps.get_model("content_manager", "CatalogIndexPage")

    pages = chain(ContentPage.objects.all(), CatalogIndexPage.objects.all())

    for page in pages:
        if not page.header_cta_label and not page.header_cta_link:
            continue

        if page.header_cta_buttons:
            continue

        button_block = (
            "button",
            {
                "text": page.header_cta_label,
                "button_type": "",
                "icon_class": "",
                "icon_side": "",
                "external_url": page.header_cta_link,
            },
        )

        page.header_cta_buttons = [("buttons", [button_block])]

        if page.live:
            # Save a revision and publish it
            live_page = page.get_latest_revision_as_object()
            original_last_published = live_page.last_published_at

            revision = live_page.save_revision()
            revision.publish()

            # Reset the last publication date to avoid indexing errors based on this field.
            live_page.last_published_at = original_last_published
            live_page.latest_revision_created_at = original_last_published
            live_page.save(update_fields=["last_published_at", "latest_revision_created_at"])

        else:
            page.save()


class Migration(migrations.Migration):

    dependencies = [
        ("content_manager", "0059_alter_cmsdsfrconfig_operator_logo_width"),
    ]

    operations = [migrations.RunPython(migrate_obsolete_fields)]
